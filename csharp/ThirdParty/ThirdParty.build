<?xml version="1.0"?>
<project name="ThirdParty-Build">

<include buildfile="../../inc/nant/OpenPetra.common.xml"/>

<target name="clean" >
  <delete>
    <fileset basedir="${dir.bin}">
      <patternset refid="3rdPartyPattern" />
      <patternset refid="NunitPattern" />
    </fileset>
  </delete>
</target>

<target name="uncrustify">
  <!-- nothing to do here -->
</target>

<target name="indent">
  <!-- nothing to do here -->
</target>

<patternset id="3rdPartyPattern">
  <include name="GNU.Gettext.dll"/>
  <include name="PdfSharp.dll"/>
  <include name="EPPlus.dll"/>
  <include name="Npgsql.dll"/>
  <include name="System.Threading.Tasks.Extensions.dll" /> <!-- Needed for Npgsql.dll -->
  <include name="System.Runtime.CompilerServices.Unsafe.dll" /> <!-- Needed for Npgsql.dll -->
  <include name="System.Memory.dll" /> <!-- Needed for Npgsql.dll -->
  <include name="MySql.Data.dll"/>
  <include name="ICSharpCode.SharpZipLib.dll"/>
  <include name="ExcelLibrary.dll"/>
  <include name="Jayrock.Json.dll"/>
  <include name="Newtonsoft.Json.dll" />
  <include name="ICSharpCode.NRefactory.dll"/> <!-- Winforms Generator -->
  <include name="PasswordUtilities.dll"/>
  <include name="Sodium.dll"/>
  <include name="MailKit.dll"/>
  <include name="MimeKit.dll"/>
  <include name="HtmlAgilityPack.dll"/>
</patternset>

<patternset id="3rdPartyWinPattern">
  <include name="Mono.Security.dll" /> <!-- Needed for Npgsql.dll -->
  <include name="libsodium.dll"/>
  <include name="libsodium-64.dll"/>
</patternset>

<patternset id="NunitPattern">
  <include name="nunit.framework.dll"/>
</patternset>

<target name="removeWindowsDlls">
  <if test="${'unix'==platform::get-name()}" >
      <delete file="${dir.bin}/Mono.Security.dll" failonerror="false"/>
      <delete file="${dir.bin}/libsodium.dll" failonerror="false"/>
      <delete file="${dir.bin}/libsodium-64.dll" failonerror="false"/>
  </if>
</target>

<target name="installNuget">
    <if test="${not file::exists(dir.nuget + '/nuget.exe')}">
      <mkdir dir="${dir.nuget}" failonerror="false"/>
      <exec program="curl" workingdir="${dir.nuget}" resultproperty="rc"> 
        <arg value="--location" />
        <arg value="https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" />
        <arg value="--output" />
        <arg value="${dir.nuget}/nuget.exe" />
      </exec>
    </if>
</target>

<target name="compile" description="Copy Thirdparty DLLs to bin directory"
  depends="installNuget">
  <echo message="Target ThirdParty compile started at: ${datetime::now()}" />         

  <loadtasks assembly="${Ict.Tools.NAntTasks.DLL}" unless="${task::exists('ExecDotNet')}"/> 
  <ExecDotNet program="${dir.nuget}/nuget.exe"
      commandline="install ${dir.3rdParty}/packages.config -OutputDirectory ${dir.nuget}"/>

  <foreach item="Folder" in="${dir.3rdParty}" property="foldername">
    <copy todir="${dir.bin}">
      <fileset basedir="${foldername}">
        <patternset refid="3rdPartyPattern" />
      </fileset>
    </copy>
  </foreach>
  <copy file="${dir.nuget}/NUnit.3.12.0/lib/net45/nunit.framework.dll" todir="${dir.bin}"/>
  <call target="removeWindowsDlls"/>
  <if test="${'win32'==platform::get-name()}">
    <foreach item="Folder" in="${dir.3rdParty}" property="foldername">
      <copy todir="${dir.bin}">
        <fileset basedir="${foldername}">
          <patternset refid="3rdPartyWinPattern" />
        </fileset>
      </copy>
    </foreach>
  </if>
  <echo message="Target ThirdParty compile finished at: ${datetime::now()}" />         
</target>

<target name="prepareProjects"/>

<target name="generateCsproject" />

<target name="generateCsprojectNoCompile" />

</project>
